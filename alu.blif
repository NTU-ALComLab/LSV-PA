.model alu_8bit
.inputs a7 a6 a5 a4 a3 a2 a1 a0 b7 b6 b5 b4 b3 b2 b1 b0 op2 op1 op0
.outputs out7 out6 out5 out4 out3 out2 out1 out0 zero overflow

# First, create inverted B input for subtraction
.names b0 op0 nb0
10 1
01 1

.names b1 op0 nb1
10 1
01 1

.names b2 op0 nb2
10 1
01 1

.names b3 op0 nb3
10 1
01 1

.names b4 op0 nb4
10 1
01 1

.names b5 op0 nb5
10 1
01 1

.names b6 op0 nb6
10 1
01 1

.names b7 op0 nb7
10 1
01 1

# Create carry-in for first adder (for subtraction)
.names op0 cin0
1 1

# Full Adder for bit 0
.names a0 nb0 cin0 sum0
100 1
010 1
001 1
111 1

.names a0 nb0 cin0 cout0
110 1
101 1
011 1
111 1

# Full Adders for remaining bits
.names a1 nb1 cout0 sum1
100 1
010 1
001 1
111 1

.names a1 nb1 cout0 cout1
110 1
101 1
011 1
111 1

.names a2 nb2 cout1 sum2
100 1
010 1
001 1
111 1

.names a2 nb2 cout1 cout2
110 1
101 1
011 1
111 1

.names a3 nb3 cout2 sum3
100 1
010 1
001 1
111 1

.names a3 nb3 cout2 cout3
110 1
101 1
011 1
111 1

.names a4 nb4 cout3 sum4
100 1
010 1
001 1
111 1

.names a4 nb4 cout3 cout4
110 1
101 1
011 1
111 1

.names a5 nb5 cout4 sum5
100 1
010 1
001 1
111 1

.names a5 nb5 cout4 cout5
110 1
101 1
011 1
111 1

.names a6 nb6 cout5 sum6
100 1
010 1
001 1
111 1

.names a6 nb6 cout5 cout6
110 1
101 1
011 1
111 1

.names a7 nb7 cout6 sum7
100 1
010 1
001 1
111 1

.names a7 nb7 cout6 cout7
110 1
101 1
011 1
111 1

# Logic Operations
# AND
.names a0 b0 and0
11 1

.names a1 b1 and1
11 1

.names a2 b2 and2
11 1

.names a3 b3 and3
11 1

.names a4 b4 and4
11 1

.names a5 b5 and5
11 1

.names a6 b6 and6
11 1

.names a7 b7 and7
11 1

# OR
.names a0 b0 or0
1- 1
-1 1

.names a1 b1 or1
1- 1
-1 1

.names a2 b2 or2
1- 1
-1 1

.names a3 b3 or3
1- 1
-1 1

.names a4 b4 or4
1- 1
-1 1

.names a5 b5 or5
1- 1
-1 1

.names a6 b6 or6
1- 1
-1 1

.names a7 b7 or7
1- 1
-1 1

# XOR
.names a0 b0 xor0
10 1
01 1

.names a1 b1 xor1
10 1
01 1

.names a2 b2 xor2
10 1
01 1

.names a3 b3 xor3
10 1
01 1

.names a4 b4 xor4
10 1
01 1

.names a5 b5 xor5
10 1
01 1

.names a6 b6 xor6
10 1
01 1

.names a7 b7 xor7
10 1
01 1

# NOT
.names a0 not0
0 1

.names a1 not1
0 1

.names a2 not2
0 1

.names a3 not3
0 1

.names a4 not4
0 1

.names a5 not5
0 1

.names a6 not6
0 1

.names a7 not7
0 1

# Shift Left
.names a6 shl7
1 1

.names a5 shl6
1 1

.names a4 shl5
1 1

.names a3 shl4
1 1

.names a2 shl3
1 1

.names a1 shl2
1 1

.names a0 shl1
1 1

.names zero_const shl0
0 1

# Shift Right
.names a1 shr0
1 1

.names a2 shr1
1 1

.names a3 shr2
1 1

.names a4 shr3
1 1

.names a5 shr4
1 1

.names a6 shr5
1 1

.names a7 shr6
1 1

.names zero_const shr7
0 1

# Output selection based on operation
.names op2 op1 op0 sum0 and0 or0 xor0 not0 shl0 shr0 out0
0001------ 1
010-1----- 1
011--1---- 1
100---1--- 1
101----1-- 1
110-----1- 1
111------1 1

.names op2 op1 op0 sum1 and1 or1 xor1 not1 shl1 shr1 out1
0001------ 1
010-1----- 1
011--1---- 1
100---1--- 1
101----1-- 1
110-----1- 1
111------1 1

.names op2 op1 op0 sum2 and2 or2 xor2 not2 shl2 shr2 out2
0001------ 1
010-1----- 1
011--1---- 1
100---1--- 1
101----1-- 1
110-----1- 1
111------1 1

.names op2 op1 op0 sum3 and3 or3 xor3 not3 shl3 shr3 out3
0001------ 1
010-1----- 1
011--1---- 1
100---1--- 1
101----1-- 1
110-----1- 1
111------1 1

.names op2 op1 op0 sum4 and4 or4 xor4 not4 shl4 shr4 out4
0001------ 1
010-1----- 1
011--1---- 1
100---1--- 1
101----1-- 1
110-----1- 1
111------1 1

.names op2 op1 op0 sum5 and5 or5 xor5 not5 shl5 shr5 out5
0001------ 1
010-1----- 1
011--1---- 1
100---1--- 1
101----1-- 1
110-----1- 1
111------1 1

.names op2 op1 op0 sum6 and6 or6 xor6 not6 shl6 shr6 out6
0001------ 1
010-1----- 1
011--1---- 1
100---1--- 1
101----1-- 1
110-----1- 1
111------1 1

.names op2 op1 op0 sum7 and7 or7 xor7 not7 shl7 shr7 out7
0001------ 1
010-1----- 1
011--1---- 1
100---1--- 1
101----1-- 1
110-----1- 1
111------1 1

# Zero flag
.names out0 out1 out2 out3 out4 out5 out6 out7 zero
00000000 1

# Overflow detection for addition/subtraction
.names a7 nb7 cout6 cout7 overflow
0010 1
0111 1
1011 1
1110 1

.end